version: '3.9'

networks:
    mynetwork:

services:
    #colon definition -  On_host_side:On_container_side
    # nginx
    nginx-service:
        image: nginx:stable-alpine
        container_name: nginx_1
        ports:
            - "8080:80"
        volumes:
            - ./app:/var/www/project
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - php-service
            - mysql-service
        networks:
            - mynetwork

    # php
    php-service:
        build:
            context: .
            dockerfile: ./php/Dockerfile #run the build from here
        container_name: php_1
        ports:
            - "9001:9000"
        volumes:
            - ./app:/var/www/project
        networks:
            - mynetwork
        environment:
            - MYSQL_VERSION=8
            - MYSQL_DB=project
            - MYSQL_PORT=3306
            - MYSQL_USER=root
            - MYSQL_PASSWORD=secret
            - MYSQL_SERVICENAME=mysql-service
    # mysql
    mysql-service:
        image: mysql:latest
        container_name: mysql_1
        ports:
            - "5306:3306"
        volumes:
            - ./mysql:/var/lib/mysql
        command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
        restart: always # always restart unless stopped manually
        environment:
            MYSQL_USER: root
            MYSQL_ROOT_PASSWORD: secret
            MYSQL_PASSWORD: secret
        networks:
            - mynetwork